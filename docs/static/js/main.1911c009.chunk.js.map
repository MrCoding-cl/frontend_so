{"version":3,"sources":["util/router.js","components/Navbar.js","components/BackgroundImage.js","components/Section.js","components/SectionHeader.js","components/StartSection.js","components/InfoSection.js","pages/index.js","context/Settings/SettingsContext.js","components/CustomCoordinates.js","components/TimeSelector.js","components/Settings.js","components/MediumSection.js","components/Consola.js","components/Footer.js","components/Chartx.js","components/SaveList.js","components/ChartSection.js","pages/uber.js","pages/not-found.js","util/analytics.js","context/Settings/SettingsReducer.js","context/Settings/SettingsState.js","pages/_app.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","Router","children","ScrollToTop","location","useLocation","useEffect","window","scrollTo","pathname","Navbar","props","useState","menuOpen","setMenuOpen","className","color","spaced","to","src","logo","alt","onClick","href","BackgroundImage","repeat","style","image","opacity","Section","size","backgroundImage","backgroundImageOpacity","backgroundImageRepeat","otherProps","SectionHeader","title","subtitle","StartSection","buttonColor","buttonInverted","buttonPath","buttonText","InfoSection","description","iconClass","iconColor","map","item","index","IndexPage","SettingsContext","createContext","CustomCoordinates","useContext","coordinates","selectedCoordinates","uberData","requestData","handleUberdata","handleRequestData","request","uber","placeholder","value","onChange","event","target","TimeSelector","time","selectedTime","morning","afternoon","night","Settings","pram","selectedPram","MediumSection","Consola","watchConsoleLogging","backgroundColor","hideTopBar","Footer","copyright","options","animation","scales","yAxes","ticks","beginAtZero","Chartx","chartData","data","SaveList","id","downloadLink","setDownloadLink","makeTextFile","a","axios","get","fetch","log","list","split","Blob","join","type","URL","revokeObjectURL","createObjectURL","Swal","fire","text","icon","confirmButtonText","download","ChartSection","start","UberPage","getId","console","embedUrl","NotFoundPage","padding","width","textAlign","analytics","Analytics","debug","process","plugins","googleAnalyticsPlugin","trackingId","page","listen","state","action","payload","labels","x","datasets","label","y","fill","borderColor","settings","terminallog","noparseado","UberPost","parseado","RequestPost","SettingsState","useReducer","SettingsReducer","dispatch","runTerminal","syncSettings","post","result","Provider","e","texto","arr","r","object","actual","array","push","parseInt","ParseoRequest","objeto","reduce","p","c","Object","keys","parseoDia","App","exact","path","component","Boolean","hostname","match","ReactDom","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1911c009.chunk.js","sourcesContent":["/*\n  A wrapper around React Router that adds a useRouter() hook so that any component\n  can easily access params, location, history, and trigger navigation.\n  Import from this file instead of react-router-dom directly.\n*/\n\nimport React, { useMemo, useEffect } from \"react\";\nimport {\n  Router as RouterOriginal,\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport queryString from \"query-string\";\n\n// Use a custom history object and pass to Router so that we\n// can utilize history.listen() where needed (such as for pageview tracking)\nimport { createBrowserHistory } from \"history\";\nexport const history = createBrowserHistory();\n\n// Export our <Router> component\n// Includes custom history object and component for auto-scrolling to top\nexport function Router({ children }) {\n  return (\n    <RouterOriginal history={history}>\n      <ScrollToTop />\n      {children}\n    </RouterOriginal>\n  );\n}\n\n// Custom useRouter hook for getting route data and methods inside any component.\n// NOTE: This hook includes all React Router hooks, which can result in extra re-renders\n// in some cases. When needed, you can optimize performance by importing the specific hook\n// you need (such as useParams or useLocation) instead of this custom useRouter hook.\nexport function useRouter() {\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  // Return our custom router object\n  // Memoize so that a new object is only returned if something changes\n  return useMemo(() => {\n    return {\n      // For convenience add push(), replace(), pathname at top level\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      // Merge params and parsed query string into single \"query\" object\n      // so that they can be used interchangeably.\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n      query: {\n        ...queryString.parse(location.search), // Convert string to object\n        ...params,\n      },\n      // Include match, location, history objects so we have\n      // access to extra React Router functionality if needed.\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history]);\n}\n\n// Remove or customize if you need more advanced scroll behavior\n// and don't want to always scroll to top when location.pathname changes.\nfunction ScrollToTop() {\n  const location = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n  return null;\n}\n\nexport {\n  Route,\n  Switch,\n  Link,\n  NavLink,\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\n","import React, { useState } from \"react\";\nimport { Link } from \"./../util/router.js\";\nimport { useAuth } from \"./../util/auth.js\";\n\nfunction Navbar(props) {\n  const auth = useAuth();\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  return (\n    <nav\n      className={\n        \"navbar\" +\n        (props.color ? ` is-${props.color}` : \"\") +\n        (props.spaced ? \" is-spaced\" : \"\")\n      }\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <div className=\"navbar-item\">\n            <Link to=\"/\">\n              <img className=\"image\" src={props.logo} alt=\"Logo\" />\n            </Link>\n          </div>\n          <div\n            className={\"navbar-burger burger\" + (menuOpen ? \" is-active\" : \"\")}\n            onClick={() => setMenuOpen(!menuOpen)}\n          >\n            <span />\n            <span />\n            <span />\n          </div>\n        </div>\n        <div className={\"navbar-menu\" + (menuOpen ? \" is-active\" : \"\")}>\n          <div className=\"navbar-end\">\n            <a className=\"navbar-item\" href=\"http://mrcoding.me/informe_so/\">\n              Documentation\n            </a>\n            <Link className=\"navbar-item\" to=\"/faq\" />\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./BackgroundImage.scss\";\n\nfunction BackgroundImage(props) {\n  return (\n    <div\n      className={\"BackgroundImage\" + (props.repeat ? \" repeat\" : \"\")}\n      style={{\n        \"--image\": `url(${props.image})`,\n        \"--opacity\": props.opacity,\n      }}\n    />\n  );\n}\n\nexport default BackgroundImage;\n","import React from \"react\";\nimport BackgroundImage from \"./BackgroundImage\";\nimport \"./Section.scss\";\n\nfunction Section(props) {\n  const {\n    color,\n    size,\n    backgroundImage,\n    backgroundImageOpacity,\n    backgroundImageRepeat,\n    className,\n    children,\n    // Passed to section element\n    ...otherProps\n  } = props;\n\n  return (\n    <section\n      className={\n        \"SectionComponent hero section is-block is-relative\" +\n        (color ? ` is-${color}` : \"\") +\n        (size ? ` is-${size}` : \"\") +\n        (className ? ` ${className}` : \"\")\n      }\n      {...otherProps}\n    >\n      {backgroundImage && (\n        <BackgroundImage\n          image={backgroundImage}\n          opacity={backgroundImageOpacity}\n          repeat={backgroundImageRepeat}\n        />\n      )}\n\n      {props.children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport \"./SectionHeader.scss\";\n\nfunction SectionHeader(props) {\n  // Render nothing if no title or subtitle\n  if (!props.title && !props.subtitle) {\n    return null;\n  }\n\n  return (\n    <header\n      className={\n        \"SectionHeader\" + (props.className ? ` ${props.className}` : \"\")\n      }\n    >\n      {props.title && (\n        <h1\n          className={\n            \"title has-text-weight-bold\" +\n            (props.size ? ` is-${props.size}` : \"\") +\n            (props.size === 1 ? \" is-size-2-mobile\" : \"\") +\n            (props.spaced ? \" is-spaced\" : \"\")\n          }\n        >\n          {props.title}\n        </h1>\n      )}\n\n      {props.subtitle && (\n        <p\n          className={\n            \"SectionHeader__subtitle subtitle\" + (props.size > 4 ? \" is-6\" : \"\")\n          }\n        >\n          {props.subtitle}\n        </p>\n      )}\n    </header>\n  );\n}\n\nexport default SectionHeader;\n","import React from \"react\";\nimport Section from \"./Section\";\nimport SectionHeader from \"./SectionHeader\";\nimport { Link } from \"./../util/router.js\";\n\nfunction StartSection(props) {\n  return (\n    <Section\n      color={props.color}\n      size={props.size}\n      backgroundImage={props.backgroundImage}\n      backgroundImageOpacity={props.backgroundImageOpacity}\n    >\n      <div className=\"container\">\n        <SectionHeader\n          title={props.title}\n          subtitle={props.subtitle}\n          size={1}\n          spaced={true}\n          className=\"has-text-centered\"\n        />\n        <div className=\"buttons is-centered\">\n          <Link\n            className={\n              \"button is-medium\" +\n              (props.buttonColor ? ` is-${props.buttonColor}` : \"\") +\n              (props.buttonInverted ? \" is-inverted\" : \"\")\n            }\n            to={props.buttonPath}\n          >\n            {props.buttonText}\n          </Link>\n        </div>\n      </div>\n    </Section>\n  );\n}\n\nexport default StartSection;\n","import React from \"react\";\nimport Section from \"./Section\";\nimport \"./InfoSection.scss\";\n\nfunction InfoSection(props) {\n  const items = [\n    {\n      title: \"React\",\n      description:\n        \"We use react in this university project for better performance.\",\n      iconClass: \"fab fa-react\",\n      iconColor: \"primary\",\n    },\n    {\n      title: \"Uber\",\n      description:\n        \"We use the algorithm that simulates in uber given in the project.\",\n      iconClass: \"fab fa-uber\",\n      iconColor: \"primary\",\n    },\n    {\n      title: \"Algorim\",\n      description:\n        \"We are using the Harmonic Random Walk and the PRAM version.\",\n      iconClass: \"fas fa-random\",\n      iconColor: \"primary\",\n    },\n  ];\n\n  return (\n    <Section\n      color={props.color}\n      size={props.size}\n      backgroundImage={props.backgroundImage}\n      backgroundImageOpacity={props.backgroundImageOpacity}\n    >\n      <div className=\"container\">\n        <div className=\"columns is-vcentered is-desktop\">\n          <div className=\"column\">\n            <figure className=\"InfoSection__image image\">\n              <img src={props.image} alt=\"Illustration\" />\n            </figure>\n          </div>\n          <div className=\"column is-1\" />\n          <div className=\"column is-5-desktop\">\n            {items.map((item, index) => (\n              <div\n                className=\"InfoSection__feature columns is-vcentered is-variable is-4 is-mobile\"\n                key={index}\n              >\n                <div className=\"column is-narrow\">\n                  <div\n                    className={`InfoSection__icon icon has-text-${item.iconColor}`}\n                  >\n                    <i className={`${item.iconClass}`} />\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <h3 className=\"InfoSection__title title has-text-weight-bold is-spaced is-5\">\n                    {item.title}\n                  </h3>\n                  <p className=\"subtitle is-6 has-text-grey\">\n                    {item.description}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </Section>\n  );\n}\n\nexport default InfoSection;\n","import React from \"react\";\nimport StartSection from \"./../components/StartSection\";\nimport InfoSection from \"./../components/InfoSection\";\n\n\nfunction IndexPage(props) {\n    // eslint-disable-next-line no-undef\n\n  return (\n    <>\n      <StartSection\n        color=\"white\"\n        size=\"medium\"\n        backgroundImage=\"\"\n        backgroundImageOpacity={1}\n        title=\"Uber Simulator\"\n        subtitle=\"Simulator Ubers that travel the minimum total distance, considering the distances of the routes they have to travel..\"\n        buttonText=\"Start\"\n        buttonColor=\"primary\"\n        buttonInverted={false}\n        buttonPath=\"/uber\"\n      />\n      <InfoSection\n        color=\"white\"\n        size=\"medium\"\n        backgroundImage=\"\"\n        backgroundImageOpacity={1}\n        image=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3rFO85cD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/bkv3xbjb74epempcjone.gif\"\n      />\n    </>\n  );\n}\n\nexport default IndexPage;\n","import {createContext} from \"react\";\r\n\r\n\r\n\r\nconst SettingsContext=createContext();\r\n\r\n\r\n\r\nexport default SettingsContext;\r\n\r\n","import React, {useState, useContext, useEffect} from \"react\";\nimport SettingsContext from \"../context/Settings/SettingsContext\";\n\nfunction CustomCoordinates(props) {\n\n    const {coordinates,selectedCoordinates,uberData,requestData,handleUberdata,handleRequestData} = useContext(SettingsContext);\n    const [username, setUsername] = useState('');\n    // console.log(username)\n    return (\n    <div className=\"column\">\n      <p className=\"card-header-title\">Custom coordinates</p>\n      <div className=\"buttons has-addons\">\n        <button className={`button ${(coordinates.request===true?\"is-info is-selected\":\"\")}`} onClick={()=>selectedCoordinates(1)} >Ubers</button>\n        <button className={`button ${(coordinates.uber===true?\"is-info is-selected\":\"\")}`} onClick={()=>selectedCoordinates(2)} >Request</button>\n      </div>\n        <>\n            {(coordinates.request===true?<textarea className=\"textarea\" placeholder={`119 459\n142 680\n933 468\n737 567`} value={uberData} onChange={event=>handleUberdata(event.target.value)}/>:coordinates.uber===true?<textarea className=\"textarea\" placeholder={`492 720 - 521 353 - 9\n231 321 - 939 660 - 14\n256 470 - 690 944 - 40\n534 724 - 52 382 - 67`} value={requestData} onChange={event=>handleRequestData(event.target.value)}/>:<> </>)}\n        </>\n      <div className=\"container has-text-centered\">\n        {/*<button className=\"button is-primary\">Send</button>*/}\n      </div>\n    </div>\n  );\n}\n\nexport default CustomCoordinates;\n","import React,{useContext} from \"react\";\nimport SettingsContext from \"../context/Settings/SettingsContext\";\n\nfunction TimeSelector(props) {\n  const {time,selectedTime} = useContext(SettingsContext);\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <h2 className=\"subtitle is-6\">Time</h2>\n        <div className=\"buttons\">\n          <button className={`button ${(time.morning===true?\"is-info is-selected\":\"\")}`} onClick={ ()=>selectedTime(1)}>morning</button>\n          <button className={`button ${(time.afternoon===true?\"is-info is-selected\":\"\")}`} onClick={ ()=>selectedTime(2)}>afternoon</button>\n          <button className={`button ${(time.night===true?\"is-info is-selected\":\"\")}`} onClick={ ()=>selectedTime(3)}>night</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeSelector;\n","import React,{useState,useContext} from \"react\";\nimport TimeSelector from \"./TimeSelector\";\nimport SettingsContext from \"../context/Settings/SettingsContext\";\n\nfunction Settings(props) {\n\n    const {pram,selectedPram} = useContext(SettingsContext);\n\n  return (\n    <div className=\"column is-one-third\">\n      <p className=\"card-header-title\">Settings</p>\n      <TimeSelector />\n      <div className=\"columns\">\n        <div className=\"column\">\n          <h2 className=\"subtitle is-6\">Pram or not pram</h2>\n          <div className=\"buttons has-addons\">\n            <button className={`button ${(pram.pram===true?\"is-info is-selected\":\"\")}`} onClick={ ()=>selectedPram(1)}>pram</button>\n            <button className={`button ${(pram.pram===false?\"is-info is-selected\":\"\")}`} onClick={ ()=>selectedPram(2)}>no pram</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React from \"react\";\nimport CustomCoordinates from \"./CustomCoordinates\";\nimport Settings from \"./Settings\";\n\nfunction MediumSection(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"columns\">\n        <CustomCoordinates />\n        <Settings />\n      </div>\n    </div>\n  );\n}\n\nexport default MediumSection;\n","import React, {useContext, useEffect} from 'react';\r\nimport Terminal from 'terminal-in-react';\r\n\r\n\r\nconst Consola = () => {\r\n  return (\r\n      <>\r\n        <Terminal watchConsoleLogging color={\"green\"} backgroundColor={'while'}  hideTopBar={true}/>\r\n      </>\r\n  )\r\n\r\n}\r\n\r\nexport default Consola;","import React from \"react\";\nimport Section from \"./Section\";\nimport \"./Footer.scss\";\n\nfunction Footer(props) {\n  return (\n    <Section\n      color={props.color}\n      size={props.size}\n      backgroundImage={props.backgroundImage}\n      backgroundImageOpacity={props.backgroundImageOpacity}\n      className=\"footer\"\n    >\n      <div className=\"FooterComponent__container container\">\n        <div className=\"brand left\">\n          <a href=\"https://mrcoding.dev\">\n            <img src={props.logo} alt=\"Logo\" />\n          </a>\n        </div>\n        <div className=\"copyright\">{props.copyright}</div>\n      </div>\n    </Section>\n  );\n}\n\nexport default Footer;\n","import React, {useContext} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport SettingsContext from \"../context/Settings/SettingsContext\";\r\n\r\n\r\n\r\nconst options = {\r\n    animation: false,\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst Chartx = (props) => {\r\n    const {chartData} = useContext(SettingsContext);\r\n    return (\r\n        <>\r\n            <div className='header'>\r\n                <h1 className='title'>Line Chart</h1>\r\n                <div className='links'>\r\n                    <a\r\n                        className='btn btn-gh'\r\n                        href=''\r\n                    >\r\n                        Backend data\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <Line data={chartData} options={options}/>\r\n            \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Chartx;","import React, {useContext,useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport SettingsContext from \"../context/Settings/SettingsContext\";\r\n\r\n\r\n\r\n\r\nconst SaveList = () => {\r\n    const {id} = useContext(SettingsContext);\r\n    const [downloadLink, setDownloadLink] = useState('')\r\n\r\n    // function for generating file and set download link\r\n    const makeTextFile = async() => {\r\n        try{\r\n            const fetch= await axios.get(`http://localhost:8080/log/${id}`);\r\n            const log=fetch.data[\"log\"]\r\n            const list=log.split('\\n')\r\n            const data = new Blob([list.join('\\n')], { type: 'text/plain' })\r\n            if (downloadLink !== '') window.URL.revokeObjectURL(downloadLink)\r\n\r\n            // update the download link state\r\n            setDownloadLink(window.URL.createObjectURL(data))\r\n\r\n        } catch(error){\r\n            Swal.fire({\r\n                title: 'Ocurrio un error',\r\n                text: error,\r\n                icon: 'error',\r\n                confirmButtonText: 'Ta bien'\r\n            })\r\n        }\r\n    }\r\n    // useEffect(() => {\r\n    //     makeTextFile()\r\n    // }, [])\r\n\r\n    // Call the function if list changes\r\n    // useEffect(() => {\r\n    //     makeTextFile()\r\n    // }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"buttons\">\r\n                <a className=\"button\" download='log.txt' href={downloadLink} onClick={makeTextFile}>Download Log</a>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SaveList;","import React, {useContext} from \"react\";\n\nimport Section from \"./Section\";\nimport SectionHeader from \"./SectionHeader\";\nimport MediumSection from \"./MediumSection\";\nimport Consola from \"./Consola\";\nimport Footer from \"./Footer\";\nimport \"./ChartSection.scss\";\nimport Chartx from \"./Chartx\";\nimport SaveList from \"./SaveList\";\nimport SettingsContext from \"../context/Settings/SettingsContext\";\n\n\nfunction ChartSection(props) {\n    const {start} = useContext(SettingsContext);\n\n\n\n    return (\n    <>\n      <Section\n        color={props.color}\n        size={props.size}\n        backgroundImage={props.backgroundImage}\n        backgroundImageOpacity={props.backgroundImageOpacity}\n      >\n        <div className=\"ChartSection__container container\">\n          <SectionHeader\n            title={props.title}\n            subtitle={props.subtitle}\n            size={3}\n            spaced={true}\n            className=\"has-text-centered\"\n          />\n          <div className=\"box has-text-centered\">\n\n              <Chartx/>\n          </div>\n          <div className=\"container has-text-centered\">\n            <button className=\"button is-primary is-rounded\" onClick={start}>Start</button>\n          </div>\n          <MediumSection />\n            <br/>\n            <br/>\n          <Consola />\n            <br/>\n            <br/>\n            <div className=\"container has-text-centered\">\n                <SaveList/>\n            </div>\n        </div>\n      </Section>\n      <Footer\n        color=\"white\"\n        size=\"normal\"\n        backgroundImage=\"\"\n        backgroundImageOpacity={1}\n        copyright=\"© 2021 Mrcoding\"\n        logo=\"https://res.cloudinary.com/dimsv0hrt/image/upload/v1612244854/mrcoding/logo_kfr9x6.svg\"\n      />\n    </>\n  );\n}\n\nexport default ChartSection;\n","import React,{useContext,useEffect} from \"react\";\nimport ChartSection from \"./../components/ChartSection\";\nimport SettingsContext from \"../context/Settings/SettingsContext\";\n\nfunction UberPage(props) {\n\n  const {id,getId} = useContext(SettingsContext);\n  useEffect(() => {\n    // Actualiza el título del documento usando la API del navegador\n    if(id===null){\n      console.log(id)\n      getId();\n    }\n  },[]);\n  return (\n    <ChartSection\n      color=\"white\"\n      size=\"medium\"\n      backgroundImage=\"\"\n      backgroundImageOpacity={1}\n      title=\"Panel\"\n      subtitle=\"Time and distance chart of the ubers\"\n      embedUrl=\"https://www.youtube.com/embed/z9Ul9ccDOqE\"\n    />\n  );\n}\n\nexport default UberPage;\n","import React from \"react\";\n\nfunction NotFoundPage(props) {\n  return (\n    <div\n      style={{\n        padding: \"50px\",\n        width: \"100%\",\n        textAlign: \"center\",\n      }}\n    >\n      The page <code>{props.location.pathname}</code> could not be found\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import Analytics from \"analytics\";\nimport googleAnalyticsPlugin from \"@analytics/google-analytics\";\nimport { history } from \"./router.js\";\n\n// Initialize analytics and plugins\n// Documentation: https://getanalytics.io\nconst analytics = Analytics({\n  debug: process.env.NODE_ENV !== \"production\",\n  plugins: [\n    googleAnalyticsPlugin({\n      trackingId: process.env.REACT_APP_GA_TRACKING_ID,\n    }),\n  ],\n});\n\n// Track initial pageview\nif (typeof window !== \"undefined\") {\n  analytics.page();\n}\n\n// Track pageview on route change\nhistory.listen(() => {\n  analytics.page();\n});\n\nexport default analytics;\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state, action) => {\r\n    const { payload, type } = action;\r\n\r\n    // eslint-disable-next-line default-case\r\n    switch (type){\r\n\r\n        case 'START_CHART':\r\n            return {\r\n                ...state,\r\n                chartData:{\r\n                    labels: payload.x,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Ubers',\r\n                            data: payload.y,\r\n                            fill: false,\r\n                            backgroundColor: 'rgb(255, 99, 132)',\r\n                            borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                        },\r\n                    ],\r\n                }\r\n\r\n            }\r\n            case 'SELECT_COORDINATES':\r\n                if(payload===1){\r\n                    return {\r\n                        ...state,\r\n                        coordinates:{\r\n                            uber:false,\r\n                            request:true,\r\n                        }\r\n                    }\r\n                }else{\r\n                    return {\r\n                        ...state,\r\n                        coordinates:{\r\n                            uber:true,\r\n                            request:false,\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n        case 'SELECT_PRAM':\r\n            if(payload===1){\r\n                return {\r\n                    ...state,\r\n                    pram:{\r\n                        pram:true\r\n                    }\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    pram:{\r\n                        pram:false\r\n                    }\r\n                }\r\n\r\n            }\r\n        case 'SELECT_TIME':\r\n            if(payload===1){\r\n                return {\r\n                    ...state,\r\n                    time:{\r\n                        morning:true,\r\n                        afternoon:false,\r\n                        night:false,\r\n                    }\r\n                }\r\n            }else if(payload===2){\r\n                return {\r\n                    ...state,\r\n                    time:{\r\n                        morning:false,\r\n                        afternoon:true,\r\n                        night:false,\r\n                    }\r\n                }\r\n\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    time:{\r\n                        morning:false,\r\n                        afternoon:false,\r\n                        night:true,\r\n                    }\r\n                }\r\n\r\n            }\r\n        case 'GET_ID':\r\n            return{\r\n                ...state,\r\n                id:payload\r\n            }\r\n\r\n        case 'SETTINGS_SYNC':\r\n            return{\r\n                ...state,\r\n                settings:payload\r\n            }\r\n        case 'RUN_TERMINAL':\r\n            return{\r\n                ...state,\r\n                terminallog:payload\r\n            }\r\n\r\n        case 'INPUT_TIME':\r\n            return{\r\n                ...state,\r\n                uberData:payload.noparseado,\r\n                UberPost:payload.parseado\r\n            }\r\n        case 'INPUT_REQUEST':\r\n            return{\r\n                ...state,\r\n                requestData:payload.noparseado,\r\n                RequestPost:payload.parseado\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n};\r\n\r\n","// eslint-disable-next-line no-unused-vars\r\nimport React,{useReducer,useCallback} from \"react\";\r\nimport SettingsReducer from \"./SettingsReducer\"\r\nimport SettingsContext from \"./SettingsContext\";\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst SettingsState=(props)=>{\r\n    const initialState={\r\n        uberData:'',\r\n        requestData:'',\r\n        UberPost:null, //validacion\r\n        RequestPost:null,//validacion\r\n        terminallog:[],\r\n        id:null,\r\n        settings:false, //Valida si se han recibido settiongs, caso contrario inicia todo random\r\n        coordinates:{\r\n            uber:null,\r\n            request:null,\r\n        },\r\n        time:{\r\n            morning:null,\r\n            afternoon:null,\r\n            night:null,\r\n        },\r\n        pram:{\r\n            pram:null\r\n        },\r\n        chartData:{\r\n            labels: ['0'],\r\n            datasets: [\r\n                {\r\n                    label: 'Ubers',\r\n                    data: [0],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(255, 99, 132)',\r\n                    borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    const handleUberdata =(e)=>{\r\n\r\n        const parseoDia=(texto)=>{\r\n            let arr = texto.split(\"\\n\").map(r => r.split(\" \"));\r\n\r\n            function objectify(array) {\r\n                return array.reduce(function(p, c) {\r\n                    p[c[0]] = c[1];\r\n                    return p;\r\n                }, {});\r\n            }\r\n\r\n            const objeto= objectify(arr)\r\n\r\n            var result = Object.keys(objeto).map(e => ({x: parseInt(e), y: parseInt(objeto[e])}))\r\n\r\n            return result\r\n        }\r\n        //console.log(parseoDia(e))\r\n        dispatch({type:'INPUT_TIME',payload:{parseado:parseoDia(e),noparseado:e}})\r\n\r\n\r\n    }\r\n\r\n    const handleRequestData =(e)=>{\r\n        const ParseoRequest=(texto)=>{\r\n            let arr = texto.split(\"\\n\").map(r => r.split(\" \"));\r\n            var object=[]\r\n            arr.map((actual,index,array)=>{\r\n                object.push({\r\n                    \"xi\": parseInt(actual[0]),\r\n                    \"yi\": parseInt(actual[1]),\r\n                    \"xf\": parseInt(actual[3]),\r\n                    \"yf\": parseInt(actual[4]),\r\n                    \"t\": parseInt(actual[6])\r\n\r\n                })\r\n            })\r\n\r\n\r\n            return object\r\n\r\n        }\r\n        //console.log(ParseoRequest(e))\r\n\r\n        dispatch({type:'INPUT_REQUEST',payload:{parseado:ParseoRequest(e),noparseado:e}})\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [state, dispatch] = useReducer(SettingsReducer, initialState);\r\n\r\n    const selectedTime=(value)=>{\r\n        dispatch({type:'SELECT_TIME',payload:value})\r\n    }\r\n\r\n    const selectedCoordinates=(value)=>{\r\n        dispatch({type:'SELECT_COORDINATES',payload:value})\r\n    }\r\n\r\n    const selectedPram=(value)=>{\r\n        dispatch({type:'SELECT_PRAM',payload:value})\r\n    }\r\n\r\n    const runTerminal=async()=>{\r\n        const fetch= await axios.get(`http://localhost:8080/log/${state.id}`);\r\n\r\n        const log=fetch.data[\"log\"]\r\n\r\n        //const list=log.split('\\n')\r\n        // setInterval(function() {\r\n        //     for(var i=0; i<list.length; i++){\r\n        //         console.log(list[i])\r\n        //     }\r\n        // }, 5000);\r\n\r\n        console.log(log)\r\n\r\n        // console.log(state.RequestPost)\r\n        //dispatch({type:'RUN_TERMINAL',payload:array})\r\n\r\n    }\r\n\r\n    const getId=async()=>{\r\n        const id= await axios.get('http://localhost:8080/id')\r\n        dispatch({type:'GET_ID',payload:id.data})\r\n        // try{\r\n        //     const id= await axios.get('http://localhost:8080/id')\r\n        //     dispatch({type:'GET_ID',payload:id.data})\r\n        // }catch (error){\r\n        //     Swal.fire({\r\n        //         title: 'Ocurrio un error',\r\n        //         text: 'No hay conexion a internet',\r\n        //         icon: 'error',\r\n        //         confirmButtonText: 'Ta bien'\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    const syncSettings=async()=>{\r\n        dispatch({type:'SETTINGS_SYNC',payload:true})\r\n        if(state.UberPost===null && state.RequestPost===null){\r\n            //Si no hay ubers recibidos solo se envia los parametros\r\n            const res = axios.post(`http://localhost:8080/config/${state.id}`, {\r\n                \"run_type\": (state.time.morning===true?0:state.time.afternoon===true?1:state.time.night===true:2),\r\n                \"pram\":state.pram.pram,\r\n            });\r\n        }\r\n        if(state.UberPost!==null){\r\n            const res = axios.post(`http://localhost:8080/config/${state.id}`, {\r\n                \"run_type\":4,\r\n                \"pram\":state.pram.pram,\r\n                \"ubers\":state.UberPost,\r\n                \"request\":state.RequestPost\r\n            });\r\n        }else{\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const start=async()=>{\r\n\r\n        try{\r\n\r\n            await syncSettings()\r\n\r\n            // if(state.pram.pram!=null){\r\n            //     await syncSettings()\r\n            //\r\n            // }\r\n            const result= await axios.get(`http://localhost:8080/result/${state.id}`)\r\n            //console.log(result)\r\n            console.log(`ìd actual: ${state.id}`)\r\n            dispatch({type:'START_CHART',payload: {\r\n                    x:result.data.x,y:result.data.y\r\n                }})\r\n            await runTerminal()\r\n        }catch (error){\r\n            Swal.fire({\r\n                title: 'Ocurrio un error',\r\n                text: error,\r\n                icon: 'error',\r\n                confirmButtonText: 'Ta bien'\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <SettingsContext.Provider value={{\r\n            coordinates: state.coordinates,\r\n            uberData: state.uberData,\r\n            requestData:state.requestData,\r\n            time:state.time,\r\n            pram:state.pram,\r\n            chartData:state.chartData,\r\n            terminallog:state.terminallog,\r\n            id:state.id,\r\n            UberPost:state.UberPost,\r\n            RequestPost:state.RequestPost,\r\n            handleRequestData,\r\n            getId,\r\n            selectedCoordinates,\r\n            selectedTime,\r\n            selectedPram,\r\n            start,\r\n            handleUberdata,\r\n            dispatch\r\n        }}>\r\n            {props.children}\r\n        </SettingsContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default SettingsState;\r\n\r\n","import React, {useContext,useEffect} from \"react\";\nimport \"./../styles/global.scss\";\nimport Navbar from \"./../components/Navbar\";\nimport IndexPage from \"./index\";\nimport UberPage from \"./uber\";\nimport { Switch, Route, Router } from \"./../util/router.js\";\nimport NotFoundPage from \"./not-found.js\";\nimport \"./../util/analytics.js\";\n\n//Context\n\nimport SettingsState from \"../context/Settings/SettingsState\";\n\nfunction App(props) {\n\n\n\n\n  return (\n    <SettingsState>\n      <Router>\n        <>\n          <Navbar\n              color=\"white\"\n              spaced={true}\n              logo=\"https://uft.cl/images/la_universidad/imagen-corporativa/Institucional/Logo_FINIS_institucional.png\"\n          />\n\n          <Switch>\n            <Route exact path=\"/\" component={IndexPage} />\n\n            <Route exact path=\"/uber\" component={UberPage} />\n\n            <Route component={NotFoundPage} />\n          </Switch>\n        </>\n      </Router>\n    </SettingsState>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./pages/_app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}