(self.webpackChunkinforme_so=self.webpackChunkinforme_so||[]).push([[126],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),f=a,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3383:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i=["components"],l={sidebar_position:3},s={unversionedId:"BackEnd/translate-your-site",id:"BackEnd/translate-your-site",isDocsHomePage:!1,title:"FibberRoutes",description:"Fiber Logo",source:"@site/docs/BackEnd/translate-your-site.md",sourceDirName:"BackEnd",slug:"/BackEnd/translate-your-site",permalink:"/docs/BackEnd/translate-your-site",editUrl:"https://github.com/MrCoding-cl/informe_so/docs/BackEnd/translate-your-site.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Server",permalink:"/docs/BackEnd/server"}},u=[{value:"Imports",id:"imports",children:[]},{value:"Variable Global",id:"variable-global",children:[]},{value:"Configurando las rutas",id:"configurando-las-rutas",children:[{value:"/id",id:"id",children:[]},{value:"/config/:id",id:"configid",children:[]}]}],c={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/gofiber/docs/master/static/fiber_v2_logo.svg",alt:"Fiber Logo"})),(0,o.kt)("p",null,"En esta area del codigo se ordenan las peticiones que pueden hacerse al programa."),(0,o.kt)("h2",{id:"imports"},"Imports"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="FiberRoutes.go"',title:'"FiberRoutes.go"'},'import (\n    "github.com/gofiber/fiber/v2"\n    "github.com/gofiber/fiber/v2/middleware/cors"\n    "log"\n    "os"\n)\n')),(0,o.kt)("p",null,"Go tiene una peculiaridad debido a que puede importar paquetes directamente desde github debido a que cada paquete tiene\nun nombre en especifico y este puede configurarse gracias a que go posee un fichero llamado 'go.mod' el cual permite que\nesto sea posible para este caso se importo el paquete de fiber y el CORS para configurar la posibilidad de ejecutar los\nmetodos dentro del programa sin limitaciones de origen (Debido a que sin esto dificulta el hacer GET, POST, etc. Desde\notras direcciones diferentes de localhost)"),(0,o.kt)("h2",{id:"variable-global"},"Variable Global"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="FiberRoutes.go"',title:'"FiberRoutes.go"'},"var app = fiber.New()\n")),(0,o.kt)("p",null,"La variable global ",(0,o.kt)("inlineCode",{parentName:"p"},"app")," es utilizada a modo de configurar y llamar al servidor desde cualquier fichero dentro del\npaquete ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"main"))),(0,o.kt)("h2",{id:"configurando-las-rutas"},"Configurando las rutas"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="FiberRoutes.go"',title:'"FiberRoutes.go"'},'func FiberRoutes() {\n    // Default config\n    app.Use(cors.New(cors.Config{\n        Next:             nil,\n        AllowOrigins:     "*",\n        AllowMethods:     "GET,POST,HEAD,PUT,DELETE,PATCH",\n        AllowHeaders:     "",\n        AllowCredentials: false,\n        ExposeHeaders:    "",\n        MaxAge:           0,\n    }))\n    app.Get("/id", FiberIdGET)\n    app.Get("/config/:id", FiberConfigGET)\n    app.Post("/config/:id", FiberConfigPOST)\n    app.Get("/result/:id", FiberResultGET)\n    app.Get("/log/:id", FiberLogGET)\n    port, ok := os.LookupEnv("PORT") // For Heroku or Elastic\n    if !ok {\n        port = "8080"\n    }\n    log.Fatal(app.Listen(":" + port))\n}\n')),(0,o.kt)("p",null,"La funcion de FiberRoutes es en primera instancia hacer que la variable ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"app"))," utilice una configuraci\xf3n por defecto de\nCORS la cual es una configuraci\xf3n permisiva como se ha mencionado anteriormente. "),(0,o.kt)("h3",{id:"id"},"/id"),(0,o.kt)("p",null,"Empezando por la ruta ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"/id"))," la cual\ndebe de generar una ID para el cliente que funcionara como identificador unico para los siguientes procesos."),(0,o.kt)("h3",{id:"configid"},"/config/:id"),(0,o.kt)("p",null,"La ruta ",(0,o.kt)("inlineCode",{parentName:"p"},"/config/:id")," donde ",(0,o.kt)("inlineCode",{parentName:"p"},":id")," es el numero identificador unico obtenido por la funci\xf3n get. Esta ruta tiene dos metodos posibles"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"GET")," para obtener la configuraci\xf3n del cliente en formato ",(0,o.kt)("strong",{parentName:"li"},"JSON")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"POST")," para enviar una nueva configuraci\xf3n en formato ",(0,o.kt)("strong",{parentName:"li"},"JSON"))),(0,o.kt)("p",null,"El formato de la configuraci\xf3n es el siguiente (por defecto):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "run_type": 3,\n    "pram": false,\n    "ubers": [\n        {\n            "x": 0,\n            "y": 0\n        }\n    ],\n    "request": [\n        {\n            "xi": 0,\n            "yi": 0,\n            "xf": 0,\n            "yf": 0,\n            "t": 0\n        }\n    ]\n}\n')))}p.isMDXComponent=!0}}]);